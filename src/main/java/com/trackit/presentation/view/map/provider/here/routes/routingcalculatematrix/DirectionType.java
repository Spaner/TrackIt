//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.29 at 05:11:02 PM WET 
//


package com.trackit.presentation.view.map.provider.here.routes.routingcalculatematrix;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DirectionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DirectionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="forward"/>
 *     &lt;enumeration value="bearRight"/>
 *     &lt;enumeration value="lightRight"/>
 *     &lt;enumeration value="right"/>
 *     &lt;enumeration value="hardRight"/>
 *     &lt;enumeration value="uTurnRight"/>
 *     &lt;enumeration value="uTurnLeft"/>
 *     &lt;enumeration value="hardLeft"/>
 *     &lt;enumeration value="left"/>
 *     &lt;enumeration value="lightLeft"/>
 *     &lt;enumeration value="bearLeft"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DirectionType")
@XmlEnum
public enum DirectionType {

    @XmlEnumValue("forward")
    FORWARD("forward"),
    @XmlEnumValue("bearRight")
    BEAR_RIGHT("bearRight"),
    @XmlEnumValue("lightRight")
    LIGHT_RIGHT("lightRight"),
    @XmlEnumValue("right")
    RIGHT("right"),
    @XmlEnumValue("hardRight")
    HARD_RIGHT("hardRight"),
    @XmlEnumValue("uTurnRight")
    U_TURN_RIGHT("uTurnRight"),
    @XmlEnumValue("uTurnLeft")
    U_TURN_LEFT("uTurnLeft"),
    @XmlEnumValue("hardLeft")
    HARD_LEFT("hardLeft"),
    @XmlEnumValue("left")
    LEFT("left"),
    @XmlEnumValue("lightLeft")
    LIGHT_LEFT("lightLeft"),
    @XmlEnumValue("bearLeft")
    BEAR_LEFT("bearLeft");
    private final String value;

    DirectionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DirectionType fromValue(String v) {
        for (DirectionType c: DirectionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
