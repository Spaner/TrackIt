//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.29 at 05:11:02 PM WET 
//


package com.trackit.presentation.view.map.provider.here.routes.routingcalculatematrix;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WaypointParameterEntityTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="WaypointParameterEntityTypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="airport"/>
 *     &lt;enumeration value="intersection"/>
 *     &lt;enumeration value="fullAddress"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WaypointParameterEntityTypeType")
@XmlEnum
public enum WaypointParameterEntityTypeType {


    /**
     * Short form "ap". A waypoint entity type denoting an airport
     * 
     */
    @XmlEnumValue("airport")
    AIRPORT("airport"),

    /**
     * Short form "in". A waypoint entity type denoting an intersection of two streets. The EntityDetails element in the corresponding Waypoint instance should contain the names of the intersecting streets seperated by an ampersand sign. Note that the ampersand needs to be properly URL encoded.
     * 
     */
    @XmlEnumValue("intersection")
    INTERSECTION("intersection"),

    /**
     * Short form "fa". A waypoint entity type denoting a full address. The EntityDetails element in the corresponding Waypoint instance must contain the encodeded details about the intersection.
     * 
     */
    @XmlEnumValue("fullAddress")
    FULL_ADDRESS("fullAddress");
    private final String value;

    WaypointParameterEntityTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WaypointParameterEntityTypeType fromValue(String v) {
        for (WaypointParameterEntityTypeType c: WaypointParameterEntityTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
