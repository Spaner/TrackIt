//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.29 at 05:09:22 PM WET 
//


package com.trackit.presentation.view.map.provider.here.routes.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GeoPositioningSource.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="GeoPositioningSource">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="GPS"/>
 *     &lt;enumeration value="IP"/>
 *     &lt;enumeration value="RFID"/>
 *     &lt;enumeration value="WiFi"/>
 *     &lt;enumeration value="Bluetooth"/>
 *     &lt;enumeration value="CellId"/>
 *     &lt;enumeration value="User"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "GeoPositioningSource")
@XmlEnum
public enum GeoPositioningSource {


    /**
     * Location retrieved through Global Positioning System
     * 
     */
    GPS("GPS"),

    /**
     * Location inferred from IP Address
     * 
     */
    IP("IP"),

    /**
     * Location inferred from RFID network signal
     * 
     */
    RFID("RFID"),

    /**
     * Location inferred from WiFi network signal
     * 
     */
    @XmlEnumValue("WiFi")
    WI_FI("WiFi"),

    /**
     * Location inferred from Bluetooth MAC Address
     * 
     */
    @XmlEnumValue("Bluetooth")
    BLUETOOTH("Bluetooth"),

    /**
     * Location inferred from GSM/CDMA cell IDs
     * 
     */
    @XmlEnumValue("CellId")
    CELL_ID("CellId"),

    /**
     * Location retrieved through User input
     * 
     */
    @XmlEnumValue("User")
    USER("User");
    private final String value;

    GeoPositioningSource(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GeoPositioningSource fromValue(String v) {
        for (GeoPositioningSource c: GeoPositioningSource.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
