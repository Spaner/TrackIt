//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.29 at 05:11:02 PM WET 
//


package com.henriquemalheiro.trackit.presentation.view.map.provider.heremaps.routes.routingcalculatematrix;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PublicTransportLineAttributeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PublicTransportLineAttributeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="foreground"/>
 *     &lt;enumeration value="background"/>
 *     &lt;enumeration value="lineStyle"/>
 *     &lt;enumeration value="companyShortName"/>
 *     &lt;enumeration value="companyLogo"/>
 *     &lt;enumeration value="flags"/>
 *     &lt;enumeration value="typeName"/>
 *     &lt;enumeration value="lineId"/>
 *     &lt;enumeration value="companyId"/>
 *     &lt;enumeration value="systemId"/>
 *     &lt;enumeration value="stops"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PublicTransportLineAttributeType")
@XmlEnum
public enum PublicTransportLineAttributeType {


    /**
     * Short value: "fg". Indicates whether the foreground color shall be included in the line.
     * 
     */
    @XmlEnumValue("foreground")
    FOREGROUND("foreground"),

    /**
     * Short value: "bg". Indicates whether the background color of the line shall be provided.
     * 
     */
    @XmlEnumValue("background")
    BACKGROUND("background"),

    /**
     * Short value: "ls". Indicates whether the line style of the public transport line shall be provided.
     * 
     */
    @XmlEnumValue("lineStyle")
    LINE_STYLE("lineStyle"),

    /**
     * Short value: "cs". Indicates whether the company short name should be included in the public transport line.
     * 
     */
    @XmlEnumValue("companyShortName")
    COMPANY_SHORT_NAME("companyShortName"),

    /**
     * Short value: "cl". Indicates whether the company logo should be included in the public transport line.
     * 
     */
    @XmlEnumValue("companyLogo")
    COMPANY_LOGO("companyLogo"),

    /**
     * Short value: "fl". Indicates whether the flags should be included in the public transport line.
     * 
     */
    @XmlEnumValue("flags")
    FLAGS("flags"),

    /**
     * Short value: "tn". Indicates whether the type name should be included in the public transport line.
     * 
     */
    @XmlEnumValue("typeName")
    TYPE_NAME("typeName"),

    /**
     * Short value: "li". Indicates whether the line Id should be included in the public transport line.
     * 
     */
    @XmlEnumValue("lineId")
    LINE_ID("lineId"),

    /**
     * Short value: "ci". Indicates whether the company Id should be included in the public transport line.
     * 
     */
    @XmlEnumValue("companyId")
    COMPANY_ID("companyId"),

    /**
     * Short value: "si". Indicates whether the system Id should be included in the public transport line.
     * 
     */
    @XmlEnumValue("systemId")
    SYSTEM_ID("systemId"),

    /**
     * Short value: "st". Indicates whether stops should be included in the public transport line.
     * 
     */
    @XmlEnumValue("stops")
    STOPS("stops");
    private final String value;

    PublicTransportLineAttributeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PublicTransportLineAttributeType fromValue(String v) {
        for (PublicTransportLineAttributeType c: PublicTransportLineAttributeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
