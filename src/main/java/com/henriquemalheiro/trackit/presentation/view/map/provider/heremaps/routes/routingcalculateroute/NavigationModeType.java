//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.29 at 05:11:32 PM WET 
//


package com.henriquemalheiro.trackit.presentation.view.map.provider.heremaps.routes.routingcalculateroute;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NavigationModeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NavigationModeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="default"/>
 *     &lt;enumeration value="preroute"/>
 *     &lt;enumeration value="baseroute"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "NavigationModeType")
@XmlEnum
public enum NavigationModeType {


    /**
     * No navigation relevant logic will be considered (i.e. normal route calculation for e.g. route display). This mode is the default for route calculation.
     * 
     */
    @XmlEnumValue("none")
    NONE("none"),

    /**
     * Default navigation mode. This mode will use the navigation kernel for route calculation and return corridor information as specified in the corridor options.
     * 
     */
    @XmlEnumValue("default")
    DEFAULT("default"),

    /**
     * Mode that will return the minimal information needed to start navigation thereby allowing a quick user response. The client could already send a route request with the "default" navigation mode in parallel which will then return the complete route content.
     * 
     */
    @XmlEnumValue("preroute")
    PREROUTE("preroute"),

    /**
     * Mode that will only return the base route even though the calculation will be done using the navigation kernel.
     * 
     */
    @XmlEnumValue("baseroute")
    BASEROUTE("baseroute");
    private final String value;

    NavigationModeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NavigationModeType fromValue(String v) {
        for (NavigationModeType c: NavigationModeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
